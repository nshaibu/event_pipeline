# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "leftRETRYPOINTERPPOINTERPARALLELASSIGN BOOLEAN COMMENT DIRECTIVE FLOAT IDENTIFIER INT LBRACKET LCURLY_BRACKET LPAREN PARALLEL POINTER PPOINTER RBRACKET RCURLY_BRACKET RETRY RPAREN SEPARATOR STRING_LITERAL\n    program : expression\n    \n    expression :  expression POINTER expression\n                | expression PPOINTER expression\n                | expression PARALLEL expression\n                | descriptor POINTER expression\n                | descriptor PPOINTER expression\n                | expression_groupings POINTER expression\n                | expression POINTER expression_groupings\n                | descriptor POINTER expression_groupings\n                | expression_groupings PPOINTER expression\n                | expression PPOINTER expression_groupings\n                | descriptor PPOINTER expression_groupings\n                | expression_groupings PARALLEL expression_groupings\n                | expression_groupings PARALLEL expression\n                | expression PARALLEL expression_groupings\n                | factor RETRY task\n                | task RETRY factor\n                | expression_groupings RETRY factor\n                | factor RETRY expression_groupings\n    \n    expression : term\n    \n    term : task\n    \n    descriptor : INT\n    \n    factor : INT\n            | FLOAT\n    \n    task : IDENTIFIER\n        | IDENTIFIER LBRACKET assigment_expression_group RBRACKET\n    \n    conditional_group : expression SEPARATOR expression\n                | conditional_group SEPARATOR expression\n    \n    task :  task LPAREN conditional_group RPAREN\n    \n    assignment_expression : IDENTIFIER ASSIGN STRING_LITERAL\n                            | IDENTIFIER ASSIGN INT\n                            | IDENTIFIER ASSIGN FLOAT\n                            | IDENTIFIER ASSIGN BOOLEAN\n    \n    assigment_expression_group : assignment_expression\n                                | assignment_expression SEPARATOR assignment_expression\n                                | assigment_expression_group SEPARATOR assignment_expression\n    \n    expression_groupings : LCURLY_BRACKET expression RCURLY_BRACKET\n                            | expression_groupings assigment_expression_group\n    "

_lr_action_items = {
    "INT": (
        [
            0,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            25,
            26,
            47,
            62,
            63,
        ],
        [
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            8,
            44,
            44,
            8,
            58,
            8,
            8,
        ],
    ),
    "LCURLY_BRACKET": (
        [
            0,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            24,
            26,
            62,
            63,
        ],
        [
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
        ],
    ),
    "FLOAT": (
        [
            0,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            25,
            26,
            47,
            62,
            63,
        ],
        [
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            59,
            10,
            10,
        ],
    ),
    "IDENTIFIER": (
        [
            0,
            4,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            21,
            22,
            24,
            26,
            28,
            30,
            32,
            34,
            36,
            38,
            41,
            45,
            46,
            49,
            53,
            55,
            56,
            57,
            58,
            59,
            60,
            62,
            63,
        ],
        [
            11,
            23,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            11,
            -38,
            -34,
            11,
            11,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            23,
            -37,
            -36,
            -35,
            -30,
            -31,
            -32,
            -33,
            11,
            11,
        ],
    ),
    "$end": (
        [
            1,
            2,
            6,
            7,
            10,
            11,
            21,
            22,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            48,
            49,
            50,
            53,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            64,
        ],
        [
            0,
            -1,
            -21,
            -20,
            -24,
            -25,
            -38,
            -34,
            -2,
            -8,
            -3,
            -11,
            -4,
            -15,
            -5,
            -9,
            -6,
            -12,
            -7,
            -10,
            -13,
            -14,
            -18,
            -23,
            -16,
            -19,
            -17,
            -37,
            -36,
            -35,
            -30,
            -31,
            -32,
            -33,
            -29,
            -26,
        ],
    ),
    "POINTER": (
        [
            2,
            3,
            4,
            6,
            7,
            8,
            10,
            11,
            21,
            22,
            27,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            48,
            49,
            50,
            52,
            53,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            64,
            65,
            66,
        ],
        [
            12,
            15,
            17,
            -21,
            -20,
            -22,
            -24,
            -25,
            -38,
            -34,
            12,
            -2,
            -8,
            -3,
            -11,
            -4,
            -15,
            -5,
            -9,
            -6,
            -12,
            -7,
            -10,
            -13,
            -14,
            -18,
            -23,
            -16,
            -19,
            -17,
            12,
            -37,
            -36,
            -35,
            -30,
            -31,
            -32,
            -33,
            -29,
            -26,
            12,
            12,
        ],
    ),
    "PPOINTER": (
        [
            2,
            3,
            4,
            6,
            7,
            8,
            10,
            11,
            21,
            22,
            27,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            48,
            49,
            50,
            52,
            53,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            64,
            65,
            66,
        ],
        [
            13,
            16,
            18,
            -21,
            -20,
            -22,
            -24,
            -25,
            -38,
            -34,
            13,
            -2,
            -8,
            -3,
            -11,
            -4,
            -15,
            -5,
            -9,
            -6,
            -12,
            -7,
            -10,
            -13,
            -14,
            -18,
            -23,
            -16,
            -19,
            -17,
            13,
            -37,
            -36,
            -35,
            -30,
            -31,
            -32,
            -33,
            -29,
            -26,
            13,
            13,
        ],
    ),
    "PARALLEL": (
        [
            2,
            4,
            6,
            7,
            10,
            11,
            21,
            22,
            27,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            48,
            49,
            50,
            52,
            53,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            64,
            65,
            66,
        ],
        [
            14,
            19,
            -21,
            -20,
            -24,
            -25,
            -38,
            -34,
            14,
            -2,
            -8,
            -3,
            -11,
            -4,
            -15,
            -5,
            -9,
            -6,
            -12,
            -7,
            -10,
            -13,
            -14,
            -18,
            -23,
            -16,
            -19,
            -17,
            14,
            -37,
            -36,
            -35,
            -30,
            -31,
            -32,
            -33,
            -29,
            -26,
            14,
            14,
        ],
    ),
    "RETRY": (
        [
            4,
            5,
            6,
            8,
            10,
            11,
            21,
            22,
            30,
            32,
            34,
            36,
            38,
            41,
            53,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            64,
        ],
        [
            20,
            24,
            25,
            -23,
            -24,
            -25,
            -38,
            -34,
            20,
            20,
            20,
            20,
            20,
            20,
            -37,
            -36,
            -35,
            -30,
            -31,
            -32,
            -33,
            -29,
            -26,
        ],
    ),
    "LPAREN": (
        [
            6,
            11,
            48,
            61,
            64,
        ],
        [
            26,
            -25,
            26,
            -29,
            -26,
        ],
    ),
    "RCURLY_BRACKET": (
        [
            6,
            7,
            10,
            11,
            21,
            22,
            27,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            48,
            49,
            50,
            53,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            64,
        ],
        [
            -21,
            -20,
            -24,
            -25,
            -38,
            -34,
            53,
            -2,
            -8,
            -3,
            -11,
            -4,
            -15,
            -5,
            -9,
            -6,
            -12,
            -7,
            -10,
            -13,
            -14,
            -18,
            -23,
            -16,
            -19,
            -17,
            -37,
            -36,
            -35,
            -30,
            -31,
            -32,
            -33,
            -29,
            -26,
        ],
    ),
    "SEPARATOR": (
        [
            6,
            7,
            10,
            11,
            21,
            22,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            64,
            65,
            66,
        ],
        [
            -21,
            -20,
            -24,
            -25,
            45,
            46,
            -2,
            -8,
            -3,
            -11,
            -4,
            -15,
            -5,
            -9,
            -6,
            -12,
            -7,
            -10,
            -13,
            -14,
            -18,
            -23,
            -16,
            -19,
            -17,
            62,
            63,
            -37,
            45,
            -36,
            -35,
            -30,
            -31,
            -32,
            -33,
            -29,
            -26,
            -28,
            -27,
        ],
    ),
    "RPAREN": (
        [
            6,
            7,
            10,
            11,
            21,
            22,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            48,
            49,
            50,
            51,
            53,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            64,
            65,
            66,
        ],
        [
            -21,
            -20,
            -24,
            -25,
            -38,
            -34,
            -2,
            -8,
            -3,
            -11,
            -4,
            -15,
            -5,
            -9,
            -6,
            -12,
            -7,
            -10,
            -13,
            -14,
            -18,
            -23,
            -16,
            -19,
            -17,
            61,
            -37,
            -36,
            -35,
            -30,
            -31,
            -32,
            -33,
            -29,
            -26,
            -28,
            -27,
        ],
    ),
    "LBRACKET": (
        [
            11,
        ],
        [
            28,
        ],
    ),
    "RBRACKET": (
        [
            22,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
        ],
        [
            -34,
            64,
            -36,
            -35,
            -30,
            -31,
            -32,
            -33,
        ],
    ),
    "ASSIGN": (
        [
            23,
        ],
        [
            47,
        ],
    ),
    "STRING_LITERAL": (
        [
            47,
        ],
        [
            57,
        ],
    ),
    "BOOLEAN": (
        [
            47,
        ],
        [
            60,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "program": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "expression": (
        [
            0,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            26,
            62,
            63,
        ],
        [
            2,
            27,
            29,
            31,
            33,
            35,
            37,
            39,
            40,
            42,
            52,
            65,
            66,
        ],
    ),
    "descriptor": (
        [
            0,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            26,
            62,
            63,
        ],
        [
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
        ],
    ),
    "expression_groupings": (
        [
            0,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            24,
            26,
            62,
            63,
        ],
        [
            4,
            4,
            30,
            32,
            34,
            36,
            38,
            4,
            4,
            41,
            49,
            4,
            4,
            4,
        ],
    ),
    "factor": (
        [
            0,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            25,
            26,
            62,
            63,
        ],
        [
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            5,
            43,
            50,
            5,
            5,
            5,
        ],
    ),
    "task": (
        [
            0,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            24,
            26,
            62,
            63,
        ],
        [
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            6,
            48,
            6,
            6,
            6,
        ],
    ),
    "term": (
        [
            0,
            9,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            26,
            62,
            63,
        ],
        [
            7,
            7,
            7,
            7,
            7,
            7,
            7,
            7,
            7,
            7,
            7,
            7,
            7,
        ],
    ),
    "assigment_expression_group": (
        [
            4,
            28,
            30,
            32,
            34,
            36,
            38,
            41,
            49,
        ],
        [
            21,
            54,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
        ],
    ),
    "assignment_expression": (
        [
            4,
            28,
            30,
            32,
            34,
            36,
            38,
            41,
            45,
            46,
            49,
        ],
        [
            22,
            22,
            22,
            22,
            22,
            22,
            22,
            22,
            55,
            56,
            22,
        ],
    ),
    "conditional_group": (
        [
            26,
        ],
        [
            51,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> program", "S'", 1, None, None, None),
    ("program -> expression", "program", 1, "p_program", "grammar.py", 28),
    (
        "expression -> expression POINTER expression",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        35,
    ),
    (
        "expression -> expression PPOINTER expression",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        36,
    ),
    (
        "expression -> expression PARALLEL expression",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        37,
    ),
    (
        "expression -> descriptor POINTER expression",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        38,
    ),
    (
        "expression -> descriptor PPOINTER expression",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        39,
    ),
    (
        "expression -> expression_groupings POINTER expression",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        40,
    ),
    (
        "expression -> expression POINTER expression_groupings",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        41,
    ),
    (
        "expression -> descriptor POINTER expression_groupings",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        42,
    ),
    (
        "expression -> expression_groupings PPOINTER expression",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        43,
    ),
    (
        "expression -> expression PPOINTER expression_groupings",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        44,
    ),
    (
        "expression -> descriptor PPOINTER expression_groupings",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        45,
    ),
    (
        "expression -> expression_groupings PARALLEL expression_groupings",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        46,
    ),
    (
        "expression -> expression_groupings PARALLEL expression",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        47,
    ),
    (
        "expression -> expression PARALLEL expression_groupings",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        48,
    ),
    (
        "expression -> factor RETRY task",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        49,
    ),
    (
        "expression -> task RETRY factor",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        50,
    ),
    (
        "expression -> expression_groupings RETRY factor",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        51,
    ),
    (
        "expression -> factor RETRY expression_groupings",
        "expression",
        3,
        "p_expression",
        "grammar.py",
        52,
    ),
    ("expression -> term", "expression", 1, "p_expression_term", "grammar.py", 59),
    ("term -> task", "term", 1, "p_task", "grammar.py", 66),
    ("descriptor -> INT", "descriptor", 1, "p_descriptor", "grammar.py", 73),
    ("factor -> INT", "factor", 1, "p_factor", "grammar.py", 89),
    ("factor -> FLOAT", "factor", 1, "p_factor", "grammar.py", 90),
    ("task -> IDENTIFIER", "task", 1, "p_task_taskname", "grammar.py", 105),
    (
        "task -> IDENTIFIER LBRACKET assigment_expression_group RBRACKET",
        "task",
        4,
        "p_task_taskname",
        "grammar.py",
        106,
    ),
    (
        "conditional_group -> expression SEPARATOR expression",
        "conditional_group",
        3,
        "p_conditional_group",
        "grammar.py",
        116,
    ),
    (
        "conditional_group -> conditional_group SEPARATOR expression",
        "conditional_group",
        3,
        "p_conditional_group",
        "grammar.py",
        117,
    ),
    (
        "task -> task LPAREN conditional_group RPAREN",
        "task",
        4,
        "p_task_conditional_statement",
        "grammar.py",
        129,
    ),
    (
        "assignment_expression -> IDENTIFIER ASSIGN STRING_LITERAL",
        "assignment_expression",
        3,
        "p_assignment_expression",
        "grammar.py",
        136,
    ),
    (
        "assignment_expression -> IDENTIFIER ASSIGN INT",
        "assignment_expression",
        3,
        "p_assignment_expression",
        "grammar.py",
        137,
    ),
    (
        "assignment_expression -> IDENTIFIER ASSIGN FLOAT",
        "assignment_expression",
        3,
        "p_assignment_expression",
        "grammar.py",
        138,
    ),
    (
        "assignment_expression -> IDENTIFIER ASSIGN BOOLEAN",
        "assignment_expression",
        3,
        "p_assignment_expression",
        "grammar.py",
        139,
    ),
    (
        "assigment_expression_group -> assignment_expression",
        "assigment_expression_group",
        1,
        "p_assignment_expression_group",
        "grammar.py",
        148,
    ),
    (
        "assigment_expression_group -> assignment_expression SEPARATOR assignment_expression",
        "assigment_expression_group",
        3,
        "p_assignment_expression_group",
        "grammar.py",
        149,
    ),
    (
        "assigment_expression_group -> assigment_expression_group SEPARATOR assignment_expression",
        "assigment_expression_group",
        3,
        "p_assignment_expression_group",
        "grammar.py",
        150,
    ),
    (
        "expression_groupings -> LCURLY_BRACKET expression RCURLY_BRACKET",
        "expression_groupings",
        3,
        "p_expression_groupings",
        "grammar.py",
        167,
    ),
    (
        "expression_groupings -> expression_groupings assigment_expression_group",
        "expression_groupings",
        2,
        "p_expression_groupings",
        "grammar.py",
        168,
    ),
]
