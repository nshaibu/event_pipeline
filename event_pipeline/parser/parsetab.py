
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftRETRYPOINTERPPOINTERPARALLELASSIGN BOOLEAN COMMENT DIRECTIVE FLOAT IDENTIFIER INT LBRACKET LPAREN PARALLEL POINTER PPOINTER RBRACKET RETRY RPAREN SEPARATOR STRING_LITERAL\n    expression :  expression POINTER expression\n                | expression PPOINTER expression\n                | expression PARALLEL expression\n                | descriptor POINTER expression\n                | descriptor PPOINTER expression\n                | factor RETRY task\n                | task RETRY factor\n    \n    expression : term\n    \n    term : task\n    \n    descriptor : INT\n    \n    factor : INT\n            | FLOAT\n    \n    task : IDENTIFIER\n        | IDENTIFIER LBRACKET assigment_expression_group RBRACKET\n    \n    task_group : expression SEPARATOR expression\n                | task_group SEPARATOR expression\n    \n    task :  task LPAREN task_group RPAREN\n    \n    assignment_expression : IDENTIFIER ASSIGN STRING_LITERAL\n                            | IDENTIFIER ASSIGN INT\n                            | IDENTIFIER ASSIGN FLOAT\n    \n    assigment_expression_group : assignment_expression\n                                | assignment_expression SEPARATOR assignment_expression\n                                | assigment_expression_group SEPARATOR assignment_expression\n    '
    
_lr_action_items = {'INT':([0,9,10,11,12,13,15,16,32,33,34,],[6,6,6,6,6,6,25,6,6,6,41,]),'FLOAT':([0,9,10,11,12,13,15,16,32,33,34,],[7,7,7,7,7,7,7,7,7,7,42,]),'IDENTIFIER':([0,9,10,11,12,13,14,16,17,32,33,36,37,],[8,8,8,8,8,8,8,8,28,8,8,28,28,]),'$end':([1,4,5,7,8,18,19,20,21,22,23,24,25,31,35,],[0,-9,-8,-12,-13,-1,-2,-3,-4,-5,-6,-7,-11,-17,-14,]),'POINTER':([1,2,4,5,6,7,8,18,19,20,21,22,23,24,25,27,31,35,38,39,],[9,12,-9,-8,-10,-12,-13,-1,-2,-3,-4,-5,-6,-7,-11,9,-17,-14,9,9,]),'PPOINTER':([1,2,4,5,6,7,8,18,19,20,21,22,23,24,25,27,31,35,38,39,],[10,13,-9,-8,-10,-12,-13,-1,-2,-3,-4,-5,-6,-7,-11,10,-17,-14,10,10,]),'PARALLEL':([1,4,5,7,8,18,19,20,21,22,23,24,25,27,31,35,38,39,],[11,-9,-8,-12,-13,-1,-2,-3,-4,-5,-6,-7,-11,11,-17,-14,11,11,]),'RETRY':([3,4,6,7,8,31,35,],[14,15,-11,-12,-13,-17,-14,]),'LPAREN':([4,8,23,31,35,],[16,-13,16,-17,-14,]),'SEPARATOR':([4,5,7,8,18,19,20,21,22,23,24,25,26,27,29,30,31,35,38,39,40,41,42,43,44,],[-9,-8,-12,-13,-1,-2,-3,-4,-5,-6,-7,-11,32,33,36,37,-17,-14,-16,-15,-18,-19,-20,-23,-22,]),'RPAREN':([4,5,7,8,18,19,20,21,22,23,24,25,26,31,35,38,39,],[-9,-8,-12,-13,-1,-2,-3,-4,-5,-6,-7,-11,31,-17,-14,-16,-15,]),'LBRACKET':([8,],[17,]),'ASSIGN':([28,],[34,]),'RBRACKET':([29,30,40,41,42,43,44,],[35,-21,-18,-19,-20,-23,-22,]),'STRING_LITERAL':([34,],[40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,9,10,11,12,13,16,32,33,],[1,18,19,20,21,22,27,38,39,]),'descriptor':([0,9,10,11,12,13,16,32,33,],[2,2,2,2,2,2,2,2,2,]),'factor':([0,9,10,11,12,13,15,16,32,33,],[3,3,3,3,3,3,24,3,3,3,]),'task':([0,9,10,11,12,13,14,16,32,33,],[4,4,4,4,4,4,23,4,4,4,]),'term':([0,9,10,11,12,13,16,32,33,],[5,5,5,5,5,5,5,5,5,]),'task_group':([16,],[26,]),'assigment_expression_group':([17,],[29,]),'assignment_expression':([17,36,37,],[30,43,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression POINTER expression','expression',3,'p_expression','grammar.py',24),
  ('expression -> expression PPOINTER expression','expression',3,'p_expression','grammar.py',25),
  ('expression -> expression PARALLEL expression','expression',3,'p_expression','grammar.py',26),
  ('expression -> descriptor POINTER expression','expression',3,'p_expression','grammar.py',27),
  ('expression -> descriptor PPOINTER expression','expression',3,'p_expression','grammar.py',28),
  ('expression -> factor RETRY task','expression',3,'p_expression','grammar.py',29),
  ('expression -> task RETRY factor','expression',3,'p_expression','grammar.py',30),
  ('expression -> term','expression',1,'p_expression_term','grammar.py',37),
  ('term -> task','term',1,'p_task','grammar.py',44),
  ('descriptor -> INT','descriptor',1,'p_descriptor','grammar.py',51),
  ('factor -> INT','factor',1,'p_factor','grammar.py',67),
  ('factor -> FLOAT','factor',1,'p_factor','grammar.py',68),
  ('task -> IDENTIFIER','task',1,'p_task_taskname','grammar.py',83),
  ('task -> IDENTIFIER LBRACKET assigment_expression_group RBRACKET','task',4,'p_task_taskname','grammar.py',84),
  ('task_group -> expression SEPARATOR expression','task_group',3,'p_task_group','grammar.py',95),
  ('task_group -> task_group SEPARATOR expression','task_group',3,'p_task_group','grammar.py',96),
  ('task -> task LPAREN task_group RPAREN','task',4,'p_task_conditional_statement','grammar.py',104),
  ('assignment_expression -> IDENTIFIER ASSIGN STRING_LITERAL','assignment_expression',3,'p_assignment_expression','grammar.py',112),
  ('assignment_expression -> IDENTIFIER ASSIGN INT','assignment_expression',3,'p_assignment_expression','grammar.py',113),
  ('assignment_expression -> IDENTIFIER ASSIGN FLOAT','assignment_expression',3,'p_assignment_expression','grammar.py',114),
  ('assigment_expression_group -> assignment_expression','assigment_expression_group',1,'p_assignment_expression_group','grammar.py',121),
  ('assigment_expression_group -> assignment_expression SEPARATOR assignment_expression','assigment_expression_group',3,'p_assignment_expression_group','grammar.py',122),
  ('assigment_expression_group -> assigment_expression_group SEPARATOR assignment_expression','assigment_expression_group',3,'p_assignment_expression_group','grammar.py',123),
]
